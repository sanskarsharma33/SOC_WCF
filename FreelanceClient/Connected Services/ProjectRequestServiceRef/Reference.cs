//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FreelanceClient.ProjectRequestServiceRef {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ProjectRequestServiceRef.IProjectRequestService")]
    public interface IProjectRequestService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectRequestService/DoWork", ReplyAction="http://tempuri.org/IProjectRequestService/DoWorkResponse")]
        void DoWork();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectRequestService/DoWork", ReplyAction="http://tempuri.org/IProjectRequestService/DoWorkResponse")]
        System.Threading.Tasks.Task DoWorkAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectRequestService/AddProjectRequest", ReplyAction="http://tempuri.org/IProjectRequestService/AddProjectRequestResponse")]
        string AddProjectRequest(FreelanceService.ModelClasses.ProjectRequest projectRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectRequestService/AddProjectRequest", ReplyAction="http://tempuri.org/IProjectRequestService/AddProjectRequestResponse")]
        System.Threading.Tasks.Task<string> AddProjectRequestAsync(FreelanceService.ModelClasses.ProjectRequest projectRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectRequestService/ViewProjectRequest", ReplyAction="http://tempuri.org/IProjectRequestService/ViewProjectRequestResponse")]
        System.Data.DataTable ViewProjectRequest(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectRequestService/ViewProjectRequest", ReplyAction="http://tempuri.org/IProjectRequestService/ViewProjectRequestResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> ViewProjectRequestAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectRequestService/ShowProjectRequests", ReplyAction="http://tempuri.org/IProjectRequestService/ShowProjectRequestsResponse")]
        System.Data.DataTable ShowProjectRequests(int projectId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectRequestService/ShowProjectRequests", ReplyAction="http://tempuri.org/IProjectRequestService/ShowProjectRequestsResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> ShowProjectRequestsAsync(int projectId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectRequestService/UpdateProjectRequest", ReplyAction="http://tempuri.org/IProjectRequestService/UpdateProjectRequestResponse")]
        string UpdateProjectRequest(FreelanceService.ModelClasses.ProjectRequest projectRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectRequestService/UpdateProjectRequest", ReplyAction="http://tempuri.org/IProjectRequestService/UpdateProjectRequestResponse")]
        System.Threading.Tasks.Task<string> UpdateProjectRequestAsync(FreelanceService.ModelClasses.ProjectRequest projectRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectRequestService/DeleteProjectRequest", ReplyAction="http://tempuri.org/IProjectRequestService/DeleteProjectRequestResponse")]
        string DeleteProjectRequest(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectRequestService/DeleteProjectRequest", ReplyAction="http://tempuri.org/IProjectRequestService/DeleteProjectRequestResponse")]
        System.Threading.Tasks.Task<string> DeleteProjectRequestAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProjectRequestServiceChannel : FreelanceClient.ProjectRequestServiceRef.IProjectRequestService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProjectRequestServiceClient : System.ServiceModel.ClientBase<FreelanceClient.ProjectRequestServiceRef.IProjectRequestService>, FreelanceClient.ProjectRequestServiceRef.IProjectRequestService {
        
        public ProjectRequestServiceClient() {
        }
        
        public ProjectRequestServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProjectRequestServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProjectRequestServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProjectRequestServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void DoWork() {
            base.Channel.DoWork();
        }
        
        public System.Threading.Tasks.Task DoWorkAsync() {
            return base.Channel.DoWorkAsync();
        }
        
        public string AddProjectRequest(FreelanceService.ModelClasses.ProjectRequest projectRequest) {
            return base.Channel.AddProjectRequest(projectRequest);
        }
        
        public System.Threading.Tasks.Task<string> AddProjectRequestAsync(FreelanceService.ModelClasses.ProjectRequest projectRequest) {
            return base.Channel.AddProjectRequestAsync(projectRequest);
        }
        
        public System.Data.DataTable ViewProjectRequest(int id) {
            return base.Channel.ViewProjectRequest(id);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> ViewProjectRequestAsync(int id) {
            return base.Channel.ViewProjectRequestAsync(id);
        }
        
        public System.Data.DataTable ShowProjectRequests(int projectId) {
            return base.Channel.ShowProjectRequests(projectId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> ShowProjectRequestsAsync(int projectId) {
            return base.Channel.ShowProjectRequestsAsync(projectId);
        }
        
        public string UpdateProjectRequest(FreelanceService.ModelClasses.ProjectRequest projectRequest) {
            return base.Channel.UpdateProjectRequest(projectRequest);
        }
        
        public System.Threading.Tasks.Task<string> UpdateProjectRequestAsync(FreelanceService.ModelClasses.ProjectRequest projectRequest) {
            return base.Channel.UpdateProjectRequestAsync(projectRequest);
        }
        
        public string DeleteProjectRequest(int id) {
            return base.Channel.DeleteProjectRequest(id);
        }
        
        public System.Threading.Tasks.Task<string> DeleteProjectRequestAsync(int id) {
            return base.Channel.DeleteProjectRequestAsync(id);
        }
    }
}
