//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FreelanceClient.ProjectServiceRef {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ProjectServiceRef.IProjectService")]
    public interface IProjectService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/AddProject", ReplyAction="http://tempuri.org/IProjectService/AddProjectResponse")]
        string AddProject(FreelanceService.ModelClasses.Project proj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/AddProject", ReplyAction="http://tempuri.org/IProjectService/AddProjectResponse")]
        System.Threading.Tasks.Task<string> AddProjectAsync(FreelanceService.ModelClasses.Project proj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/GetProjects", ReplyAction="http://tempuri.org/IProjectService/GetProjectsResponse")]
        System.Data.DataTable GetProjects();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/GetProjects", ReplyAction="http://tempuri.org/IProjectService/GetProjectsResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetProjectsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/UpdateProject", ReplyAction="http://tempuri.org/IProjectService/UpdateProjectResponse")]
        string UpdateProject(FreelanceService.ModelClasses.Project proj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/UpdateProject", ReplyAction="http://tempuri.org/IProjectService/UpdateProjectResponse")]
        System.Threading.Tasks.Task<string> UpdateProjectAsync(FreelanceService.ModelClasses.Project proj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/SearchProject", ReplyAction="http://tempuri.org/IProjectService/SearchProjectResponse")]
        System.Data.DataSet SearchProject(FreelanceService.ModelClasses.Project proj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/SearchProject", ReplyAction="http://tempuri.org/IProjectService/SearchProjectResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> SearchProjectAsync(FreelanceService.ModelClasses.Project proj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/DeleteProject", ReplyAction="http://tempuri.org/IProjectService/DeleteProjectResponse")]
        string DeleteProject(FreelanceService.ModelClasses.Project proj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectService/DeleteProject", ReplyAction="http://tempuri.org/IProjectService/DeleteProjectResponse")]
        System.Threading.Tasks.Task<string> DeleteProjectAsync(FreelanceService.ModelClasses.Project proj);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProjectServiceChannel : FreelanceClient.ProjectServiceRef.IProjectService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProjectServiceClient : System.ServiceModel.ClientBase<FreelanceClient.ProjectServiceRef.IProjectService>, FreelanceClient.ProjectServiceRef.IProjectService {
        
        public ProjectServiceClient() {
        }
        
        public ProjectServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProjectServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProjectServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProjectServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string AddProject(FreelanceService.ModelClasses.Project proj) {
            return base.Channel.AddProject(proj);
        }
        
        public System.Threading.Tasks.Task<string> AddProjectAsync(FreelanceService.ModelClasses.Project proj) {
            return base.Channel.AddProjectAsync(proj);
        }
        
        public System.Data.DataTable GetProjects() {
            return base.Channel.GetProjects();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetProjectsAsync() {
            return base.Channel.GetProjectsAsync();
        }
        
        public string UpdateProject(FreelanceService.ModelClasses.Project proj) {
            return base.Channel.UpdateProject(proj);
        }
        
        public System.Threading.Tasks.Task<string> UpdateProjectAsync(FreelanceService.ModelClasses.Project proj) {
            return base.Channel.UpdateProjectAsync(proj);
        }
        
        public System.Data.DataSet SearchProject(FreelanceService.ModelClasses.Project proj) {
            return base.Channel.SearchProject(proj);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SearchProjectAsync(FreelanceService.ModelClasses.Project proj) {
            return base.Channel.SearchProjectAsync(proj);
        }
        
        public string DeleteProject(FreelanceService.ModelClasses.Project proj) {
            return base.Channel.DeleteProject(proj);
        }
        
        public System.Threading.Tasks.Task<string> DeleteProjectAsync(FreelanceService.ModelClasses.Project proj) {
            return base.Channel.DeleteProjectAsync(proj);
        }
    }
}
